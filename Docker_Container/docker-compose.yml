#Apparently no longer ideal to define a version

#There's lots of test stuff, including the volumes section, that are just there as I'm following a tutorial

services:
  web:
    build: ./COMPX374   #put path to dockerfile for web here
    #image:
    ports:
      - "31337:3004"
      # in the form "outward-facing(host):internal(container)"
    
  api:
    build: ./WebAPI
    ports:
      - "443:3000"

  reverse_proxy:

  web_test:   #So this is like the web host or whatever? My brain tired
    image: nginx:latest
    ports:
      - "443:3004"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./app:/app
      # in the form: hostPath:containerPath:mode
      #   where mode is read-only or read-write and I don't fully understand what this references, while it is also not compulsory
      #   
  php_test:   #And this is... the thing that runs php scripts...
    #image: php:fpm    #fpm is necessary if using nginx (FastCGI Process Manager)
    # not using a specific version (php:8.0-fpm) uses the latest
    
    build: 
      context: .
      dockerfile: PHP.Dockerfile
    volumes:
      - ./app:/app
  mysql_test:
    image: mariadb:latest
    environment:
      #Root password for managing db
      MYSQL_ROOT_PASSWORD: 'secret'
      # login for mysql user with limited permission. The one you'll use from the php files
      MYSQL_USER: 'tutorial'
      MYSQL_PASSWORD: 'secret'
      # Name of a schema that'll be created, which that ^^ user has access to
      MYSQL_DATABASE: 'tutorial'
    volumes:
      - mysqldata:/var/lib/mysql
    ports:    #For connecting to a client such as MySQL Workbench for managing the database (not set up). PHPMyAdmin is another option but the author recommended against it
      - 3306:3306

#This creates a different database that's not linked to
# the existing local file system, so that edits in the live server 
# don't affect the real database on your file system...
# for development/testing
#Volumes is a special kind of volume that isn't linked
volumes:
  mysqldata: {}

# Things to consider checking in the docs
#   hostname
#   logging
#   restart
#   volumes (can be used across multiple services)