#Apparently no longer ideal to define a version
#I take it back, when using swarm it wants to to define one or else it assumes you're in v1
#version: "3.9"
#However, not going to bother with swarm and secrets any more
# Yooo secrets are the thing to hide login data

services:
  php:
    build: 
      context:  .
      dockerfile: php.Dockerfile   #path to Dockerfile
    #image: php:7.3.2-fpm
    ports:
      - "9000"
      # in the form "outward-facing(host):internal(container)"
    volumes:
      - ./info.php:/var/www/html/info.php
      - ./COMPX374:/var/www/html/
      - images:/var/www/html/images/    #for now just gonna put it in images raw
    #secrets:
    #  - db_secret_1
    restart: unless-stopped

  web_nginx:
    image: nginx:latest
    ports:
    #  - "31337:4003"
      - "4003"  #This is the container port being exposed
    depends_on:
      - php
    links:
      - php
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./info.php:/var/www/html/info.php
      - ./COMPX374:/var/www/html/
      - images:/var/www/html/images/
      # in the form: hostPath:containerPath:mode
      #   where mode is read-only or read-write and I don't fully understand what this references, while it is also not compulsory
    networks:
      - caddy
      - default
    #restart: on-failure
    restart: unless-stopped

  api:
    build: ./WebAPI
    ports:
    #  - "443:4004"
      - "4004"
    networks:
      - caddy
    labels:
      caddy: tuakiri.trex-sandwich.com
      caddy.0_handle_path: /api/*
      #caddy.reverse_proxy: "{{upstreams 4004}}"
      # Just a note: upstreams is a template that returns the addresses of all current Docker resources. should work, might be better, but I had some issues
      caddy.0_handle_path.reverse_proxy: "api:4004"
      caddy.1_handle: /*
      caddy.1_handle.reverse_proxy: "web_nginx:4003"
    restart: unless-stopped

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    #image: caddy:2.6.2  #This is the official docker one
    depends_on:
      - api
      - web_nginx
    ports:
      - "80:80"
      - "443:443"
      #- "31337:31337"
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- $PWD/Caddyfile:/etc/caddy/Caddyfile
      #- $PWD/site:/srv   #https://caddyserver.com/docs/running#docker-compose
      - caddy_data:/data
      #- caddy_config:/config
    restart: unless-stopped

networks:
  caddy:
    external: true

volumes:
  caddy_data: {}
  #Will we need a volume for uploading images? It should be external.
  images:
    external: true